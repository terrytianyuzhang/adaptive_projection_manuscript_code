color_vector <- c("#686dE2","#f9a52c","#d72631","#1b6535", "#efdf48","#d64e12","#a8c66c")
label_vector <- c("chen2010", "debiased", "anchor", 'plug-in')
plot_list <- vector('list', length(settings))
for(setting_index in 1:length(settings)){
SIMULATION_BATCH <- settings[setting_index]
if(SIMULATION_BATCH %in% c('InfGlobal_hard', 'InfProject_hard')){
num_features <- 1e3
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", SIMULATION_BATCH,
"_my_methods_",
"dimension_", num_features,
".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg <- result_avg[method %in% c('simple', 'debiased', 'lasso_pc1'),]
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
####add chen's method
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*)_[^_]*$", "\\1", SIMULATION_BATCH),
"_Chen2010",".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(apval_Chen2010.pval) < 0.05]
result_avg <- rbind(result_avg,
result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")])
}else if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_pc2','InfAlternative_hard_weak_pc1','InfAlternative_hard_weak_pc2')){
num_features <- 1e3
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*)_[^_]*$", "\\1", SIMULATION_BATCH),
"_my_methods_",
"dimension_", num_features,
".rds" )
result <- data.table(readRDS(result_file_name))
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_weak_pc1')){
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg <- result_avg[method %in% c('simple', 'debiased', 'lasso_pc1'),]
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
}else if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc2','InfAlternative_hard_weak_pc2')){
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg_part1 <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg_part1 <- result_avg_part1[method %in% c('lasso_pc2'),]
result[, rejection := abs(test_statistics_pc2) > 1.96]
result_avg_part2 <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg_part2 <- result_avg_part2[method %in% c('simple', 'debiased'),]
result_avg <- rbind(result_avg_part1, result_avg_part2)
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
}
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_pc2')){
####add chen's method
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*?)_.*$", "\\1", SIMULATION_BATCH),
"_Chen2010",".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(apval_Chen2010.pval) < 0.05]
result_avg <- rbind(result_avg,
result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")])
}
}
plot_list[[setting_index]] <- ggplot()+
geom_line(aes(x = sample_size_1,
y = mean_rejection,
group = method,
color = method,
linetype = method), linewidth = 1, data = result_avg)+
geom_point(aes(x = sample_size_1,
y = mean_rejection,
group = method,
color = method,
shape = method), size = 2, data = result_avg)+
scale_color_manual(name = NULL,
labels = label_vector,
values= color_vector)+
scale_shape_manual(name = NULL,
labels = label_vector,
values= shape_vector)+
scale_linetype_manual(name = NULL,
labels = label_vector,
values= linetype_vector)+
theme_bw()+
geom_hline(yintercept = 0.05, linetype = "dashed", color = "black") +
ylab('rejection %')+
xlab('group 1 sample size')
if(SIMULATION_BATCH %in% c('InfGlobal_hard')){
print(setting_index)
plot_list[[setting_index]] <- plot_list[[setting_index]] + ylim(c(0,0.3))
}
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc2')){
print(setting_index)
plot_list[[setting_index]] <- plot_list[[setting_index]] + ylim(c(0.8,1))
}
}
plot_list[[1]] <- plot_list[[1]] + xlab('') + ggtitle("Global Null, PC1")
plot_list[[2]] <- plot_list[[2]] + xlab('') + ylab('') + ggtitle('Projected Null, PC1')
plot_list[[3]] <- plot_list[[3]] + ggtitle('Alternative, PC1')
plot_list[[4]] <- plot_list[[4]] + ggtitle('Alternative, PC2')
inf_plot <- ggarrange(
plotlist = plot_list,
ncol = 2,
nrow = 2,
labels = c("A","B","C", 'D'),
common.legend = TRUE,legend = TRUE
)
inf_plot
main_simulation_plot_file <- paste0(work_directory,
"result/", 'main_simulation.pdf')
ggsave(file = main_simulation_plot_file,
width = 180, height = 180, units = "mm")
library(ggplot2)
library(ggpubr)
work_directory <- '/Users/tianyuzhang/Documents/GitHub/high-dim-comparison/Simulation_goes_into_paper/'
settings <- c('InfGlobal_hard', 'InfProject_hard', 'InfAlternative_hard_pc1', 'InfAlternative_hard_pc2')
# settings <- c('InfGlobal_hard_no_truncation', 'InfProject_hard_no_truncation', 'InfAlternative_hard_no_truncation_pc1', 'InfAlternative_hard_no_truncation_pc2')
# settings <- c('InfGlobal_hard', 'InfProject_hard', 'InfAlternative_hard_weak_pc1', 'InfAlternative_hard_weak_pc2')
plot_list <- vector('list', length(settings))
shape_vector <- c(0, 1, 8, 9)
linetype_vector <- c(1,6,4,3)
color_vector <- c("#686dE2","#f9a52c","#d72631","#1b6535", "#efdf48","#d64e12","#a8c66c")
label_vector <- c("chen2010", "debiased", "anchor", 'plug-in')
plot_list <- vector('list', length(settings))
for(setting_index in 1:length(settings)){
SIMULATION_BATCH <- settings[setting_index]
if(SIMULATION_BATCH %in% c('InfGlobal_hard', 'InfProject_hard')){
num_features <- 1e3
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", SIMULATION_BATCH,
"_my_methods_",
"dimension_", num_features,
".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg <- result_avg[method %in% c('simple', 'debiased', 'lasso_pc1'),]
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
####add chen's method
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*)_[^_]*$", "\\1", SIMULATION_BATCH),
"_Chen2010",".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(apval_Chen2010.pval) < 0.05]
result_avg <- rbind(result_avg,
result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")])
}else if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_pc2','InfAlternative_hard_weak_pc1','InfAlternative_hard_weak_pc2')){
num_features <- 1e3
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*)_[^_]*$", "\\1", SIMULATION_BATCH),
"_my_methods_",
"dimension_", num_features,
".rds" )
result <- data.table(readRDS(result_file_name))
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_weak_pc1')){
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg <- result_avg[method %in% c('simple', 'debiased', 'lasso_pc1'),]
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
}else if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc2','InfAlternative_hard_weak_pc2')){
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg_part1 <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg_part1 <- result_avg_part1[method %in% c('lasso_pc2'),]
result[, rejection := abs(test_statistics_pc2) > 1.96]
result_avg_part2 <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg_part2 <- result_avg_part2[method %in% c('simple', 'debiased'),]
result_avg <- rbind(result_avg_part1, result_avg_part2)
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
}
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_pc2')){
####add chen's method
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*?)_.*$", "\\1", SIMULATION_BATCH),
"_Chen2010",".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(apval_Chen2010.pval) < 0.05]
result_avg <- rbind(result_avg,
result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")])
}
}
plot_list[[setting_index]] <- ggplot()+
geom_line(aes(x = sample_size_1,
y = mean_rejection,
group = method,
color = method,
linetype = method), linewidth = 1, data = result_avg)+
geom_point(aes(x = sample_size_1,
y = mean_rejection,
group = method,
color = method,
shape = method), size = 2, data = result_avg)+
scale_color_manual(name = NULL,
labels = label_vector,
values= color_vector)+
scale_shape_manual(name = NULL,
labels = label_vector,
values= shape_vector)+
scale_linetype_manual(name = NULL,
labels = label_vector,
values= linetype_vector)+
theme_bw()+
geom_hline(yintercept = 0.05, linetype = "dashed", color = "black") +
ylab('rejection %')+
xlab('group 1 sample size')
if(SIMULATION_BATCH %in% c('InfGlobal_hard')){
print(setting_index)
plot_list[[setting_index]] <- plot_list[[setting_index]] + ylim(c(0,0.3))
}
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc2')){
print(setting_index)
plot_list[[setting_index]] <- plot_list[[setting_index]] + ylim(c(0.8,1))
}
}
plot_list[[1]] <- plot_list[[1]] + xlab('') + ggtitle("Global Null, PC1")
plot_list[[2]] <- plot_list[[2]] + xlab('') + ylab('') + ggtitle('Projected Null, PC1')
plot_list[[3]] <- plot_list[[3]] + ggtitle('Alternative, PC1')
plot_list[[4]] <- plot_list[[4]] + ggtitle('Alternative, PC2')
inf_plot <- ggarrange(
plotlist = plot_list,
ncol = 2,
nrow = 2,
labels = c("A","B","C", 'D'),
common.legend = TRUE,legend = TRUE
)
inf_plot
main_simulation_plot_file <- paste0(work_directory,
"result/", 'main_simulation.pdf')
ggsave(file = main_simulation_plot_file,
width = 180, height = 160, units = "mm")
?ggtitle
plot_list[[1]] <- plot_list[[1]] + xlab('') + ggtitle("Global Null, PC1") + theme(plot.title = element_text(size = 10, face = "bold"))
plot_list[[2]] <- plot_list[[2]] + xlab('') + ylab('') + ggtitle('Projected Null, PC1')
plot_list[[3]] <- plot_list[[3]] + ggtitle('Alternative, PC1')
plot_list[[4]] <- plot_list[[4]] + ggtitle('Alternative, PC2')
inf_plot <- ggarrange(
plotlist = plot_list,
ncol = 2,
nrow = 2,
labels = c("A","B","C", 'D'),
common.legend = TRUE,legend = TRUE
)
inf_plot
library(ggplot2)
library(ggpubr)
work_directory <- '/Users/tianyuzhang/Documents/GitHub/high-dim-comparison/Simulation_goes_into_paper/'
settings <- c('InfGlobal_hard', 'InfProject_hard', 'InfAlternative_hard_pc1', 'InfAlternative_hard_pc2')
# settings <- c('InfGlobal_hard_no_truncation', 'InfProject_hard_no_truncation', 'InfAlternative_hard_no_truncation_pc1', 'InfAlternative_hard_no_truncation_pc2')
# settings <- c('InfGlobal_hard', 'InfProject_hard', 'InfAlternative_hard_weak_pc1', 'InfAlternative_hard_weak_pc2')
plot_list <- vector('list', length(settings))
shape_vector <- c(0, 1, 8, 9)
linetype_vector <- c(1,6,4,3)
color_vector <- c("#686dE2","#f9a52c","#d72631","#1b6535", "#efdf48","#d64e12","#a8c66c")
label_vector <- c("chen2010", "debiased", "anchor", 'plug-in')
plot_list <- vector('list', length(settings))
for(setting_index in 1:length(settings)){
SIMULATION_BATCH <- settings[setting_index]
if(SIMULATION_BATCH %in% c('InfGlobal_hard', 'InfProject_hard')){
num_features <- 1e3
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", SIMULATION_BATCH,
"_my_methods_",
"dimension_", num_features,
".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg <- result_avg[method %in% c('simple', 'debiased', 'lasso_pc1'),]
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
####add chen's method
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*)_[^_]*$", "\\1", SIMULATION_BATCH),
"_Chen2010",".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(apval_Chen2010.pval) < 0.05]
result_avg <- rbind(result_avg,
result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")])
}else if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_pc2','InfAlternative_hard_weak_pc1','InfAlternative_hard_weak_pc2')){
num_features <- 1e3
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*)_[^_]*$", "\\1", SIMULATION_BATCH),
"_my_methods_",
"dimension_", num_features,
".rds" )
result <- data.table(readRDS(result_file_name))
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_weak_pc1')){
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg <- result_avg[method %in% c('simple', 'debiased', 'lasso_pc1'),]
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
}else if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc2','InfAlternative_hard_weak_pc2')){
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg_part1 <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg_part1 <- result_avg_part1[method %in% c('lasso_pc2'),]
result[, rejection := abs(test_statistics_pc2) > 1.96]
result_avg_part2 <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg_part2 <- result_avg_part2[method %in% c('simple', 'debiased'),]
result_avg <- rbind(result_avg_part1, result_avg_part2)
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
}
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_pc2')){
####add chen's method
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*?)_.*$", "\\1", SIMULATION_BATCH),
"_Chen2010",".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(apval_Chen2010.pval) < 0.05]
result_avg <- rbind(result_avg,
result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")])
}
}
plot_list[[setting_index]] <- ggplot()+
geom_line(aes(x = sample_size_1,
y = mean_rejection,
group = method,
color = method,
linetype = method), linewidth = 1, data = result_avg)+
geom_point(aes(x = sample_size_1,
y = mean_rejection,
group = method,
color = method,
shape = method), size = 2, data = result_avg)+
scale_color_manual(name = NULL,
labels = label_vector,
values= color_vector)+
scale_shape_manual(name = NULL,
labels = label_vector,
values= shape_vector)+
scale_linetype_manual(name = NULL,
labels = label_vector,
values= linetype_vector)+
theme_bw()+
geom_hline(yintercept = 0.05, linetype = "dashed", color = "black") +
ylab('rejection %')+
xlab('group 1 sample size')
if(SIMULATION_BATCH %in% c('InfGlobal_hard')){
print(setting_index)
plot_list[[setting_index]] <- plot_list[[setting_index]] + ylim(c(0,0.3))
}
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc2')){
print(setting_index)
plot_list[[setting_index]] <- plot_list[[setting_index]] + ylim(c(0.8,1))
}
}
plot_list[[1]] <- plot_list[[1]] + xlab('') + ggtitle("Global Null, PC1") + theme(plot.title = element_text(size = 10, face = "bold"))
plot_list[[2]] <- plot_list[[2]] + xlab('') + ylab('') + ggtitle('Projected Null, PC1')+ theme(plot.title = element_text(size = 10, face = "bold"))
plot_list[[3]] <- plot_list[[3]] + ggtitle('Alternative, PC1')+ theme(plot.title = element_text(size = 10, face = "bold"))
plot_list[[4]] <- plot_list[[4]] + ggtitle('Alternative, PC2')+ theme(plot.title = element_text(size = 10, face = "bold"))
inf_plot <- ggarrange(
plotlist = plot_list,
ncol = 2,
nrow = 2,
labels = c("A","B","C", 'D'),
common.legend = TRUE,legend = TRUE
)
inf_plot
main_simulation_plot_file <- paste0(work_directory,
"result/", 'main_simulation.pdf')
ggsave(file = main_simulation_plot_file,
width = 180, height = 160, units = "mm")
library(ggplot2)
library(ggpubr)
work_directory <- '/Users/tianyuzhang/Documents/GitHub/high-dim-comparison/Simulation_goes_into_paper/'
settings <- c('InfGlobal_hard', 'InfProject_hard', 'InfAlternative_hard_pc1', 'InfAlternative_hard_pc2')
# settings <- c('InfGlobal_hard_no_truncation', 'InfProject_hard_no_truncation', 'InfAlternative_hard_no_truncation_pc1', 'InfAlternative_hard_no_truncation_pc2')
# settings <- c('InfGlobal_hard', 'InfProject_hard', 'InfAlternative_hard_weak_pc1', 'InfAlternative_hard_weak_pc2')
plot_list <- vector('list', length(settings))
shape_vector <- c(0, 1, 8, 9)
linetype_vector <- c(1,6,4,3)
color_vector <- c("#686dE2","#f9a52c","#d72631","#1b6535", "#efdf48","#d64e12","#a8c66c")
label_vector <- c("chen2010", "debiased", "anchor", 'plug-in')
plot_list <- vector('list', length(settings))
for(setting_index in 1:length(settings)){
SIMULATION_BATCH <- settings[setting_index]
if(SIMULATION_BATCH %in% c('InfGlobal_hard', 'InfProject_hard')){
num_features <- 1e3
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", SIMULATION_BATCH,
"_my_methods_",
"dimension_", num_features,
".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg <- result_avg[method %in% c('simple', 'debiased', 'lasso_pc1'),]
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
####add chen's method
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*)_[^_]*$", "\\1", SIMULATION_BATCH),
"_Chen2010",".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(apval_Chen2010.pval) < 0.05]
result_avg <- rbind(result_avg,
result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")])
}else if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_pc2','InfAlternative_hard_weak_pc1','InfAlternative_hard_weak_pc2')){
num_features <- 1e3
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*)_[^_]*$", "\\1", SIMULATION_BATCH),
"_my_methods_",
"dimension_", num_features,
".rds" )
result <- data.table(readRDS(result_file_name))
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_weak_pc1')){
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg <- result_avg[method %in% c('simple', 'debiased', 'lasso_pc1'),]
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
}else if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc2','InfAlternative_hard_weak_pc2')){
result[, rejection := abs(test_statistics_pc1) > 1.96]
result_avg_part1 <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg_part1 <- result_avg_part1[method %in% c('lasso_pc2'),]
result[, rejection := abs(test_statistics_pc2) > 1.96]
result_avg_part2 <- result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")]
result_avg_part2 <- result_avg_part2[method %in% c('simple', 'debiased'),]
result_avg <- rbind(result_avg_part1, result_avg_part2)
result_avg[method %in% c('lasso_pc1', 'lasso_pc2'), method := 'lasso']
}
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc1', 'InfAlternative_hard_pc2')){
####add chen's method
result_file_name <- paste0(work_directory,
"result/",
"SETTING_", gsub("^(.*?)_.*$", "\\1", SIMULATION_BATCH),
"_Chen2010",".rds" )
result <- data.table(readRDS(result_file_name))
result[, rejection := abs(apval_Chen2010.pval) < 0.05]
result_avg <- rbind(result_avg,
result[, .(mean_rejection = mean(rejection)),
by = c("method", "sample_size_1")])
}
}
plot_list[[setting_index]] <- ggplot()+
geom_line(aes(x = sample_size_1,
y = mean_rejection,
group = method,
color = method,
linetype = method), linewidth = 1, data = result_avg)+
geom_point(aes(x = sample_size_1,
y = mean_rejection,
group = method,
color = method,
shape = method), size = 2, data = result_avg)+
scale_color_manual(name = NULL,
labels = label_vector,
values= color_vector)+
scale_shape_manual(name = NULL,
labels = label_vector,
values= shape_vector)+
scale_linetype_manual(name = NULL,
labels = label_vector,
values= linetype_vector)+
theme_bw()+
geom_hline(yintercept = 0.05, linetype = "dashed", color = "black") +
ylab('rejection %')+
xlab('group 1 sample size')
if(SIMULATION_BATCH %in% c('InfGlobal_hard')){
print(setting_index)
plot_list[[setting_index]] <- plot_list[[setting_index]] + ylim(c(0,0.3))
}
if(SIMULATION_BATCH %in% c('InfAlternative_hard_pc2')){
print(setting_index)
plot_list[[setting_index]] <- plot_list[[setting_index]] + ylim(c(0.8,1))
}
}
plot_list[[1]] <- plot_list[[1]] + xlab('') + ggtitle("Global Null, PC1") + theme(plot.title = element_text(size = 10, face = "bold"))
plot_list[[2]] <- plot_list[[2]] + xlab('') + ylab('') + ggtitle('Projected Null, PC1')+ theme(plot.title = element_text(size = 10, face = "bold"))
plot_list[[3]] <- plot_list[[3]] + ggtitle('Alternative, PC1')+ theme(plot.title = element_text(size = 10, face = "bold"))
plot_list[[4]] <- plot_list[[4]] + ylab('') + ggtitle('Alternative, PC2')+ theme(plot.title = element_text(size = 10, face = "bold"))
inf_plot <- ggarrange(
plotlist = plot_list,
ncol = 2,
nrow = 2,
labels = c("A","B","C", 'D'),
common.legend = TRUE,legend = TRUE
)
inf_plot
main_simulation_plot_file <- paste0(work_directory,
"result/", 'main_simulation.pdf')
ggsave(file = main_simulation_plot_file,
width = 180, height = 160, units = "mm")
